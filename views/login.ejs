<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login Page</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', Arial, sans-serif;
            background: linear-gradient(135deg, #0a0a1a 0%, #1a1a2e 100%);
            background-attachment: fixed;
            min-height: 100vh;
            color: #fff;
            position: relative;
            overflow-x: hidden;
        }

        /* Subtle Noise Texture for Background */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"%3E%3Cfilter id="noise"%3E%3CfeTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="4" stitchTiles="stitch"/%3E%3C/filter%3E%3Crect width="100" height="100" filter="url(%23noise)" opacity="0.05"/%3E%3C/svg%3E');
            z-index: -1;
        }

        /* Floating Particles with Glow */
        .floating-particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: radial-gradient(circle, rgba(255, 0, 122, 0.8) 0%, transparent 70%);
            border-radius: 50%;
            box-shadow: 0 0 8px rgba(255, 0, 122, 0.5);
            animation: float 12s infinite ease-in-out;
        }

        @keyframes float {
            0% { transform: translateY(100vh) translateX(0); opacity: 0; }
            20% { opacity: 0.8; }
            80% { opacity: 0.8; }
            100% { transform: translateY(-100vh) translateX(30px); opacity: 0; }
        }

        /* Navbar (Copied from home.ejs and register.ejs) */
        .navbar {
            background: rgba(10, 10, 25, 0.9);
            backdrop-filter: blur(15px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            padding: 15px 20px;
            position: sticky;
            top: 0;
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        }

        .navbar::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            animation: gradientFlow 5s linear infinite;
        }

        @keyframes gradientFlow {
            0% { background-position: 0%; }
            100% { background-position: 200%; }
        }

        .navbar-brand {
            font-size: 1.6rem;
            font-weight: 700;
            background: linear-gradient(90deg, #ff007a, #00ddeb);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-transform: uppercase;
            letter-spacing: 2px;
            position: relative;
            transition: transform 0.3s ease;
        }

        .navbar-brand:hover {
            transform: scale(1.05);
        }

        .navbar-buttons {
            display: flex;
            gap: 15px;
        }

        .nav-btn {
            padding: 10px 20px;
            background: linear-gradient(45deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            color: #fff;
            border: none;
            border-radius: 8px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(255, 0, 122, 0.3);
        }

        .nav-btn:hover {
            background-position: 100%;
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 8px 25px rgba(255, 0, 122, 0.5);
        }

        .nav-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s ease;
        }

        .nav-btn:hover::before {
            left: 100%;
        }

        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 40px 20px;
            position: relative;
            z-index: 1;
        }

        .hero {
            text-align: center;
            margin-bottom: 30px;
        }

        .hero h1 {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 15px;
            background: linear-gradient(90deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-transform: uppercase;
            letter-spacing: 3px;
            animation: gradientText 3s linear infinite, glowText 2s ease-in-out infinite alternate;
        }

        @keyframes gradientText {
            0% { background-position: 0%; }
            100% { background-position: 200%; }
        }

        @keyframes glowText {
            0% { text-shadow: 0 0 10px rgba(255, 0, 122, 0.5); }
            100% { text-shadow: 0 0 20px rgba(0, 221, 235, 0.8); }
        }

        .hero p {
            font-size: 1.1rem;
            color: rgba(255, 255, 255, 0.7);
            animation: fadeIn 1.5s ease-in-out;
        }

        @keyframes fadeIn {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: translateY(0); }
        }

        .glass-container {
            background: rgba(10, 10, 25, 0.6);
            backdrop-filter: blur(15px);
            border-radius: 24px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            padding: 30px;
            margin-bottom: 30px;
            position: relative;
            overflow: hidden;
            transition: all 0.5s ease;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        }

        .glass-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.5s ease;
            animation: gradientFlow 5s linear infinite;
        }

        .glass-container:hover::before {
            transform: scaleX(1);
        }

        .glass-container:hover {
            box-shadow: 0 15px 40px rgba(255, 0, 122, 0.3);
            transform: translateY(-5px) rotateX(5deg) rotateY(5deg);
            border-color: rgba(255, 0, 122, 0.2);
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 20px;
            color: #fff;
            text-align: center;
            position: relative;
            text-shadow: 0 0 10px rgba(255, 0, 122, 0.5);
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 50%;
            height: 3px;
            background: linear-gradient(90deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            border-radius: 10px;
            animation: gradientFlow 5s linear infinite;
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

        .form-group label {
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 8px;
            display: block;
            transition: color 0.3s ease;
        }

        .form-input {
            width: 100%;
            padding: 12px 15px 12px 45px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            color: #fff;
            font-size: 1rem;
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s ease;
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .form-input:focus {
            outline: none;
            border-color: #ff007a;
            box-shadow: 0 0 0 3px rgba(255, 0, 122, 0.3), 0 0 15px rgba(255, 0, 122, 0.5);
            background: rgba(255, 255, 255, 0.1);
            transform: scale(1.01);
        }

        .form-input:focus + label {
            color: #ff007a;
        }

        .form-input::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }

        .input-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: rgba(255, 255, 255, 0.5);
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .form-input:focus ~ .input-icon {
            color: #ff007a;
            transform: translateY(-50%) scale(1.1);
        }

        .btn {
            display: block;
            width: 100%;
            padding: 12px;
            background: linear-gradient(45deg, #ff007a, #00ddeb, #ff007a);
            background-size: 200%;
            color: #fff;
            border: none;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 5px 20px rgba(255, 0, 122, 0.4);
        }

        .btn:hover {
            background-position: 100%;
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 10px 30px rgba(255, 0, 122, 0.6);
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

        .link-text {
            text-align: center;
            margin-top: 20px;
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
        }

        .link-text a {
            color: #00ddeb;
            text-decoration: none;
            position: relative;
            transition: color 0.3s ease;
        }

        .link-text a:hover {
            color: #ff007a;
        }

        .link-text a::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #ff007a, #00ddeb);
            transition: width 0.3s ease;
        }

        .link-text a:hover::after {
            width: 100%;
        }

        #message {
            padding: 10px;
            margin: 15px 0;
            border-radius: 8px;
            display: none;
            font-size: 0.9rem;
            text-align: center;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .success {
            background: rgba(46, 204, 113, 0.2);
            border: 1px solid rgba(46, 204, 113, 0.5);
            box-shadow: 0 0 10px rgba(46, 204, 113, 0.3);
        }

        .error {
            background: rgba(231, 76, 60, 0.2);
            border: 1px solid rgba(231, 76, 60, 0.5);
            box-shadow: 0 0 10px rgba(231, 76, 60, 0.3);
        }

        /* Toast Notification (Copied from home.ejs and register.ejs) */
        .toast {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: rgba(10, 10, 25, 0.9);
            backdrop-filter: blur(15px);
            border-left: 4px solid #ff007a;
            padding: 15px 25px;
            border-radius: 8px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);
            transform: translateX(120%);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            z-index: 1000;
        }

        .toast.active {
            transform: translateX(0);
            box-shadow: 0 5px 25px rgba(255, 0, 122, 0.4);
        }

        .toast-content {
            display: flex;
            align-items: center;
        }

        .toast-icon {
            margin-right: 15px;
            font-size: 1.5rem;
            color: #ff007a;
            animation: iconPulse 1.5s ease-in-out infinite;
        }

        @keyframes iconPulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        .toast-message {
            font-size: 0.9rem;
            color: #fff;
        }

        @media (max-width: 768px) {
            .container {
                padding: 30px 15px;
            }

            .hero h1 {
                font-size: 2.5rem;
            }

            .hero p {
                font-size: 1rem;
            }

            .glass-container {
                padding: 25px;
            }

            .navbar {
                flex-direction: column;
                gap: 10px;
            }

            .navbar-buttons {
                width: 100%;
                justify-content: center;
            }

            .nav-btn {
                width: 100%;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <!-- Floating Particles -->
    <div class="floating-particles" id="particles"></div>

    <!-- Navbar -->
    <nav class="navbar">
        <a href="/" style="text-decoration: none;"><div class="navbar-brand">URL Shortener</div></a>
        <div class="navbar-buttons">
            <a href="/auth/register" class="nav-btn">Register</a>
            <a href="/auth/login" class="nav-btn">Login</a>
        </div>
    </nav>

    <div class="container">
        <div class="hero">
            <h1>URL Shortener</h1>
            <p>Login to your account to manage your shortened URLs</p>
        </div>
        
        <div class="glass-container">
            <h2 class="section-title">Login</h2>
            <div id="message"></div>
            <form id="loginForm">
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" class="form-input" placeholder="Enter your email" required>
                    <span class="input-icon"><i class="fa-solid fa-envelope"></i></span>
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" class="form-input" placeholder="Enter your password" required>
                    <span class="input-icon"><i class="fa-solid fa-lock"></i></span>
                </div>
                <button type="submit" class="btn">Login</button>
            </form>
            <p class="link-text">Don't have an account? <a href="/auth/register">Register here</a></p>
            <p class="link-text"><a href="/">Back to Home</a></p>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast" id="toast">
        <div class="toast-content">
            <div class="toast-icon">
                <i class="fa-solid fa-circle-check"></i>
            </div>
            <div class="toast-message" id="toastMessage"></div>
        </div>
    </div>

    <script>
        // Create floating particles
        const particlesContainer = document.getElementById('particles');
        for (let i = 0; i < 50; i++) {
            const particle = document.createElement('div');
            particle.classList.add('particle');
            particle.style.width = `${Math.random() * 4 + 1}px`;
            particle.style.height = particle.style.width;
            particle.style.left = `${Math.random() * 100}%`;
            particle.style.animationDuration = `${Math.random() * 15 + 10}s`;
            particle.style.animationDelay = `${Math.random() * 5}s`;
            particlesContainer.appendChild(particle);
        }

        // Toast notification function
        function showToast(message, type = 'success') {
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toastMessage');
            const toastIcon = toast.querySelector('.toast-icon i');
            
            toastMessage.textContent = message;
            
            if (type === 'success') {
                toastIcon.className = 'fa-solid fa-circle-check';
                toast.style.borderColor = '#ff007a';
            } else {
                toastIcon.className = 'fa-solid fa-circle-xmark';
                toast.style.borderColor = '#ff4d4d';
            }
            
            toast.classList.add('active');
            
            setTimeout(() => {
                toast.classList.remove('active');
            }, 3000);
        }

        // Handle form submission
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const email = formData.get('email');
            const password = formData.get('password');
            const messageDiv = document.getElementById('message');

            try {
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();
                
                if (response.ok) {
                    localStorage.setItem('token', data.token);
                    showToast('Login successful! Redirecting...', 'success');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 1500);
                } else {
                    showToast(data.message || 'Login failed', 'error');
                    messageDiv.className = 'error';
                    messageDiv.textContent = data.message || 'Login failed';
                    messageDiv.style.display = 'block';
                }
            } catch (error) {
                showToast('An error occurred. Please try again later.', 'error');
                messageDiv.className = 'error';
                messageDiv.textContent = 'An error occurred. Please try again later.';
                messageDiv.style.display = 'block';
            }
        });
    </script>
</body>
</html>